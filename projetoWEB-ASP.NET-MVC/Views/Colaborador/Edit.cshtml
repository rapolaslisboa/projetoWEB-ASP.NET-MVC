@model ProjetoWEB.Models.Colaborador

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/css" rel="stylesheet" type="text/css" />
    <link href="~/Content/styleGerenciamento.css" rel="stylesheet" type="text/css" />
    <title>Editar</title>
</head>
<body>

    <header class="selector" id="cabeçalho">

        <div class="logo-div">
            <a href="/LoginCadastro/Index">
                <img src="~/Images/facens.png" height="150" alt="logoFacens">
            </a>
        </div>

        <div class="container">
            <nav class="menu">
                <li>
                    <a href="/Escala/Index">Escala de trabalho</a>
                </li>
                <li>
                    <a href="/Montagem/Index">Montagem da escala de trabalho</a>
                </li>
                <li>
                    <a href="/Colaborador/Index">Gerenciamento de colaboradores</a>
                </li>
            </nav>
        </div>

        <form method="post" action="/LoginCadastro/Sair">
            <div class="sairButton">
                <input class="inputLogout" type="submit" value="Sair">
            </div>
            @{
                var msgVisitante = "Olá visitante!";
                var usuarioLogado = (ProjetoWEB.Models.Colaborador)HttpContext.Current.Session["Usuario"];
                if (usuarioLogado == null)
                {
                    <label class="msgUsuario" style="color:black">@msgVisitante</label>
                }
                else
                {
                    <label class="msgUsuario" style="color:black">@usuarioLogado.Nome</label>
                }
            }
        </form>

    </header>

    <div class="container-span">

        <div>
            <p class="textoCentro central">
                <span>Edite os dados do colaborador</span>
            </p>
        </div>

    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="editarColaborador">
            <h4>Colaborador</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idColaborador)

            <div class="formEditar">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.Oficio, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.Oficio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Oficio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="formEditar">
                @Html.LabelFor(model => model.Disponibilidade, htmlAttributes: new { @class = "colunaEdit-2" })
                <div class="colunaEdit-1">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Disponibilidade)
                        @Html.ValidationMessageFor(model => model.Disponibilidade, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="formEditar">
                <div class="buttonSalvar">
                    <input type="submit" value="Salvar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div class="linksEditar">
        @Html.ActionLink("Voltar à lista", "Index")
    </div>
</body>
</html>
